BirthdayParadox Class:


public class BirthdayParadox {

    /**
     * Xavier Quinn
     * 
     * I affirm that I have carried out the attached academic endeavors with full academic honesty, in
     * accordance with the Union College Honor Code and the course syllabus.
     */

    public static void main(String[] args) {
    	dataCollection tester = new dataCollection();
    	
    	/**
    	 * This part creates rooms and uses the methods in the dataCollection class to run experiments on the rooms.
    	 * After it cycles through all the rooms it returns the values.
    	 */
    	
        for (int roomSize=5;roomSize <= 100; roomSize=roomSize+5) {
        	int[] birthArray = tester.arrayBuilder(roomSize);
        	int score = 0;

            for (int i = 0; i < 10; i++) {
                score = score + tester.birthSort(tester.birthGeneration(birthArray));
            }
            System.out.println("The test worked " + score + "/10 for " + roomSize + " people");
        }
    }
}






DataCollection Class:



public class dataCollection {

	/**
	 * This goes through and checks for duplicate birthdays in each room
	 * then returns if there are or not.
	 */
	
    public byte birthSort(int[] birthDates) {
        for (int i = 0; i < birthDates.length; i++) {
            for (int j = i + 1; j < birthDates.length - i; j++) {
                if (birthDates[i] == birthDates[j]) {
                    return 1; 
                }
            }
        }
        return 0;
    }

    /**
     * This makes the birthdays for the people put into the rooms
     * and then returns an array of them
     */
    
    public int[] birthGeneration(int[] birthDates) {
        for (byte j = 0; j < birthDates.length; j++) {
            birthDates[j] = (int)(366 * Math.random());
        }
        return birthDates;
    }
    
    /**
     * This makes an array that acts as a room 
     * and then returns it
     */
    
    public int[] arrayBuilder(int roomSize) {
        int[] birthArray = new int[roomSize]; 
        return birthArray;
    }
}
