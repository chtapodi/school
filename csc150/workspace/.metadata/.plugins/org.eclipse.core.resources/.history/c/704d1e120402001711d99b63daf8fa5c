/**
 * 
 */

/**
 * @author xavier
 * 
 */
public class BSTTesting {
	public static void main(String[] args) {

		Testing.setVerbose(true);
		Testing.startTests();

		//testSearch();
		testFindParent();
		
		Testing.finishTests();

	}

	private static void testSearch() {
		BinarySearchTree tree = fill();
		
		Testing.assertEquals("Exists", "Blob", tree.search("Blob").key);
		Testing.assertEquals("Exists", "Albert", tree.search("Albert").key);
		Testing.assertEquals("does not exist", null, tree.search("red"));
		Testing.assertEquals("does not exist", null, tree.search("blob"));
	}

	private static void testFindParent() {
		BinarySearchTree tree = new BinarySearchTree<String>();
		tree.insert("Ahhh", 1);
		tree.insert("Beeee", 4);
		
		System.out.println(tree.toString());
		
		Testing.assertEquals("Exists", "Ahhh", tree.findParent("Beeee").key);
		
		
	}
	
	private static BinarySearchTree fill() {
		BinarySearchTree tree = new BinarySearchTree<String>();
		tree.insert("Albert", 5);
		tree.insert("Steve", 1);
		tree.insert("Bert", 10);
		tree.insert("Freddy", 4);
		tree.insert("Zuthar", 22);
		tree.insert("Mike", 4);
		tree.insert("Blob", 6);
		return tree;
		
	}

}
